Link: --> https://practice.geeksforgeeks.org/problems/chocolate-distribution-problem3825/1#

Question: Given an array A[ ] of positive integers of size N, where each value represents the number of chocolates in a packet. Each packet can have a variable number of chocolates. There are M students, the task is to distribute chocolate packets among M students such that :
1. Each student gets exactly one packet.
2. The difference between maximum number of chocolates given to a student and minimum number of chocolates given to a student is minimum.

Example 1:

Input:
N = 8, M = 5
A = {3, 4, 1, 9, 56, 7, 9, 12}
Output: 6
Explanation: The minimum difference between 
maximum chocolates and minimum chocolates 
is 9 - 3 = 6 by choosing following M packets :
{3, 4, 9, 7, 9}.

Approach: Sort all the chocolate packets in ascending order , then check for the minimum difference for first and last packets

Solution:

class Solution
{
    public long findMinDiff (ArrayList<Integer> a, int n, int m)
    {
        // your code here
        Collections.sort(a);
        // System.out.println(a);
        int startIndex = 0;
        int endIndex = m-1;
        long min = a.get(endIndex++)-a.get(startIndex++);
        while(endIndex<=n-1){
            int newMin = a.get(endIndex++)-a.get(startIndex++);
            if(min>newMin){
                min=newMin;
            }
        }
        return min;
    }
}